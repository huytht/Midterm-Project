// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Midterm_Project.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221202092047_UpdateSchemaFilmSchedule")]
    partial class UpdateSchemaFilmSchedule
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cinema", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AmountDefault")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cinema", (string)null);
                });

            modelBuilder.Entity("Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Film", (string)null);
                });

            modelBuilder.Entity("FilmSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AmountEmpty")
                        .HasColumnType("int");

                    b.Property<int>("CinemaID")
                        .HasColumnType("int");

                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PremiereTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CinemaID");

                    b.HasIndex("FilmID");

                    b.ToTable("FilmSchedule", (string)null);
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AmountTicket")
                        .HasColumnType("int");

                    b.Property<int>("FilmScheduleID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FilmScheduleID");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("FilmSchedule", b =>
                {
                    b.HasOne("Cinema", "Cinema")
                        .WithMany("FilmSchedules")
                        .HasForeignKey("CinemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FilmSchedule_Cinema");

                    b.HasOne("Film", "Film")
                        .WithMany("FilmSchedules")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_FilmSchedule_Film");

                    b.Navigation("Cinema");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.HasOne("FilmSchedule", "FilmSchedule")
                        .WithMany("Orders")
                        .HasForeignKey("FilmScheduleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Order_FilmSchedule");

                    b.Navigation("FilmSchedule");
                });

            modelBuilder.Entity("Cinema", b =>
                {
                    b.Navigation("FilmSchedules");
                });

            modelBuilder.Entity("Film", b =>
                {
                    b.Navigation("FilmSchedules");
                });

            modelBuilder.Entity("FilmSchedule", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
